package countdown;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Arrays;
import java.util.Comparator;

public class modder {
	public static void main(String[] args) throws FileNotFoundException, IOException {
		sortByLength("src/dictionary.txt");
	}
	
	public static void sortByLength(String path) throws FileNotFoundException, IOException {
		FileIO reader = new FileIO();
		String[] raw = reader.load(path);
		for(int i = 0; i < raw.length; i++) {
			raw[i] = raw[i].trim();
		}
		
		for(int t = 0; t < raw.length - 1; t++) {
			if(t % 1000 == 0)System.out.println((100.0*t/raw.length)+"%");
			
			for(int i = 0; i < raw.length - t - 1; i++) {
				String a = raw[i];
				String b = raw[i + 1];
				int s = a.length() - b.length();
				if(s == 0)// if(t1[i+1].compareTo(t1[1+1])>0)
				{
					if(a.compareTo(b) > 0) {
						String tempStr = raw[i];
						raw[i] = raw[i + 1];
						raw[i + 1] = tempStr;
					}
				} else {
					if(s < 0) {
						String tempStr = raw[i];
						raw[i] = raw[i + 1];
						raw[i + 1] = tempStr;
					}
				}
			}
		}
		
		System.out.println(Arrays.toString(raw));
		reader.save("src/dictionaryByLength.txt", raw);
	}
}

class MyComparator implements Comparator<String>{
    @Override
    public int compare(String o1, String o2) {  
      if (o1.length() > o2.length()) {
         return 1;
      } else if (o1.length() < o2.length()) {
         return -1;
      }
      return o1.compareTo(o2);
    }
}
